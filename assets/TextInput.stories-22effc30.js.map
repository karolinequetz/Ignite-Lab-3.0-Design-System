{"version":3,"file":"TextInput.stories-22effc30.js","sources":["../../node_modules/phosphor-react/dist/icons/Envelope.esm.js","../../src/components/TextInput.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n\n/* GENERATED FILE */\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"224 56 128 144 32 56\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"path\", {\n    d: \"M32,56H224a0,0,0,0,1,0,0V192a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V56a0,0,0,0,1,0,0Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"110.5\",\n    y1: \"128\",\n    x2: \"34.5\",\n    y2: \"197.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"221.5\",\n    y1: \"197.7\",\n    x2: \"145.5\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polygon\", {\n    points: \"224 56 128 144 32 56 224 56\",\n    opacity: \"0.2\"\n  }), React.createElement(\"polyline\", {\n    points: \"224 56 128 144 32 56\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M32,56H224a0,0,0,0,1,0,0V192a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V56A0,0,0,0,1,32,56Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"110.5\",\n    y1: \"128\",\n    x2: \"34.5\",\n    y2: \"197.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"221.5\",\n    y1: \"197.7\",\n    x2: \"145.5\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M224,48H32a8,8,0,0,0-8,8V192a16,16,0,0,0,16,16H216a16,16,0,0,0,16-16V56A8,8,0,0,0,224,48ZM98.7,128,40,181.8V74.2Zm11.8,10.9,12.1,11a8,8,0,0,0,10.8,0l12.1-11L203.4,192H52.6ZM157.3,128,216,74.2V181.8Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"224 56 128 144 32 56\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"path\", {\n    d: \"M32,56H224a0,0,0,0,1,0,0V192a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V56A0,0,0,0,1,32,56Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"110.5\",\n    y1: \"128\",\n    x2: \"34.5\",\n    y2: \"197.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"221.5\",\n    y1: \"197.7\",\n    x2: \"145.5\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"224 56 128 144 32 56\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"path\", {\n    d: \"M32,56H224a0,0,0,0,1,0,0V192a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V56A0,0,0,0,1,32,56Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"110.5\",\n    y1: \"128\",\n    x2: \"34.5\",\n    y2: \"197.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"221.5\",\n    y1: \"197.7\",\n    x2: \"145.5\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"224 56 128 144 32 56\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M32,56H224a0,0,0,0,1,0,0V192a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V56A0,0,0,0,1,32,56Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"110.5\",\n    y1: \"128\",\n    x2: \"34.5\",\n    y2: \"197.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"221.5\",\n    y1: \"197.7\",\n    x2: \"145.5\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar Envelope = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nEnvelope.displayName = \"Envelope\";\n\nexport default Envelope;\n//# sourceMappingURL=Envelope.esm.js.map\n","import { InputHTMLAttributes, ReactNode } from 'react';\r\nimport { Slot } from '@radix-ui/react-slot';\r\n\r\nexport interface TextInputRootProps {\r\n  children: ReactNode;\r\n}\r\n\r\nfunction TextInputRoot(props: TextInputRootProps) {\r\n  return (\r\n    <div className=\"flex items-center gap-3 h-12 py-4 px-3 rounded bg-gray-800 w-full focus-within:ring-2 ring-cyan-300\">\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nTextInputRoot.displayName = 'TextInput.Root'\r\n\r\nexport interface TextInputIconProps {\r\n  children: ReactNode;\r\n}\r\n\r\nfunction TextInputIcon(props: TextInputIconProps) {\r\n  return (\r\n    <Slot className=\"w-6 h-6 text-gray-400\">\r\n      {props.children}\r\n    </Slot>\r\n  )\r\n}\r\n\r\nTextInputIcon.displayName = 'TextInput.Icon'\r\n\r\nexport interface TextInputInputProps extends InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nfunction TextInputInput(props: TextInputInputProps) {\r\n  return (\r\n    <input \r\n      className=\"bg-transparent flex-1 text-gray-100 text-xs placeholder:text-gray-400 outline-none\"\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nTextInputInput.displayName = 'TextInput.Input'\r\n\r\nexport const TextInput = {\r\n  Root: TextInputRoot,\r\n  Input: TextInputInput,\r\n  Icon: TextInputIcon,\r\n}"],"names":["pathsByWeight","color","React","renderPath","weight","renderPathForWeight","Envelope","forwardRef","props","ref","IconBase","Envelope$1","TextInputRoot","jsx","TextInputIcon","Slot","TextInputInput","TextInput"],"mappings":"yNAKA,IAAIA,EAA6B,IAAI,IACrCA,EAAc,IAAI,OAAQ,SAAUC,EAAO,CACzC,OAAOC,EAAM,cAAcA,EAAM,SAAU,KAAMA,EAAM,cAAc,WAAY,CAC/E,OAAQ,uBACR,KAAM,OACN,OAAQD,EACR,cAAe,QACf,eAAgB,QAChB,YAAa,IACjB,CAAG,EAAGC,EAAM,cAAc,OAAQ,CAC9B,EAAG,gFACH,KAAM,OACN,OAAQD,EACR,cAAe,QACf,eAAgB,QAChB,YAAa,IACjB,CAAG,EAAGC,EAAM,cAAc,OAAQ,CAC9B,GAAI,QACJ,GAAI,MACJ,GAAI,OACJ,GAAI,QACJ,KAAM,OACN,OAAQD,EACR,cAAe,QACf,eAAgB,QAChB,YAAa,IACjB,CAAG,EAAGC,EAAM,cAAc,OAAQ,CAC9B,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,MACJ,KAAM,OACN,OAAQD,EACR,cAAe,QACf,eAAgB,QAChB,YAAa,IACd,CAAA,CAAC,CACJ,CAAC,EACDD,EAAc,IAAI,UAAW,SAAUC,EAAO,CAC5C,OAAOC,EAAM,cAAcA,EAAM,SAAU,KAAMA,EAAM,cAAc,UAAW,CAC9E,OAAQ,8BACR,QAAS,KACb,CAAG,EAAGA,EAAM,cAAc,WAAY,CAClC,OAAQ,uBACR,KAAM,OACN,OAAQD,EACR,cAAe,QACf,eAAgB,QAChB,YAAa,IACjB,CAAG,EAAGC,EAAM,cAAc,OAAQ,CAC9B,EAAG,kFACH,KAAM,OACN,OAAQD,EACR,cAAe,QACf,eAAgB,QAChB,YAAa,IACjB,CAAG,EAAGC,EAAM,cAAc,OAAQ,CAC9B,GAAI,QACJ,GAAI,MACJ,GAAI,OACJ,GAAI,QACJ,KAAM,OACN,OAAQD,EACR,cAAe,QACf,eAAgB,QAChB,YAAa,IACjB,CAAG,EAAGC,EAAM,cAAc,OAAQ,CAC9B,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,MACJ,KAAM,OACN,OAAQD,EACR,cAAe,QACf,eAAgB,QAChB,YAAa,IACd,CAAA,CAAC,CACJ,CAAC,EACDD,EAAc,IAAI,OAAQ,UAAY,CACpC,OAAOE,EAAM,cAAcA,EAAM,SAAU,KAAMA,EAAM,cAAc,OAAQ,CAC3E,EAAG,wMACJ,CAAA,CAAC,CACJ,CAAC,EACDF,EAAc,IAAI,QAAS,SAAUC,EAAO,CAC1C,OAAOC,EAAM,cAAcA,EAAM,SAAU,KAAMA,EAAM,cAAc,WAAY,CAC/E,OAAQ,uBACR,KAAM,OACN,OAAQD,EACR,cAAe,QACf,eAAgB,QAChB,YAAa,IACjB,CAAG,EAAGC,EAAM,cAAc,OAAQ,CAC9B,EAAG,kFACH,KAAM,OACN,OAAQD,EACR,cAAe,QACf,eAAgB,QAChB,YAAa,IACjB,CAAG,EAAGC,EAAM,cAAc,OAAQ,CAC9B,GAAI,QACJ,GAAI,MACJ,GAAI,OACJ,GAAI,QACJ,KAAM,OACN,OAAQD,EACR,cAAe,QACf,eAAgB,QAChB,YAAa,IACjB,CAAG,EAAGC,EAAM,cAAc,OAAQ,CAC9B,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,MACJ,KAAM,OACN,OAAQD,EACR,cAAe,QACf,eAAgB,QAChB,YAAa,IACd,CAAA,CAAC,CACJ,CAAC,EACDD,EAAc,IAAI,OAAQ,SAAUC,EAAO,CACzC,OAAOC,EAAM,cAAcA,EAAM,SAAU,KAAMA,EAAM,cAAc,WAAY,CAC/E,OAAQ,uBACR,KAAM,OACN,OAAQD,EACR,cAAe,QACf,eAAgB,QAChB,YAAa,GACjB,CAAG,EAAGC,EAAM,cAAc,OAAQ,CAC9B,EAAG,kFACH,KAAM,OACN,OAAQD,EACR,cAAe,QACf,eAAgB,QAChB,YAAa,GACjB,CAAG,EAAGC,EAAM,cAAc,OAAQ,CAC9B,GAAI,QACJ,GAAI,MACJ,GAAI,OACJ,GAAI,QACJ,KAAM,OACN,OAAQD,EACR,cAAe,QACf,eAAgB,QAChB,YAAa,GACjB,CAAG,EAAGC,EAAM,cAAc,OAAQ,CAC9B,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,MACJ,KAAM,OACN,OAAQD,EACR,cAAe,QACf,eAAgB,QAChB,YAAa,GACd,CAAA,CAAC,CACJ,CAAC,EACDD,EAAc,IAAI,UAAW,SAAUC,EAAO,CAC5C,OAAOC,EAAM,cAAcA,EAAM,SAAU,KAAMA,EAAM,cAAc,WAAY,CAC/E,OAAQ,uBACR,KAAM,OACN,OAAQD,EACR,cAAe,QACf,eAAgB,QAChB,YAAa,IACjB,CAAG,EAAGC,EAAM,cAAc,OAAQ,CAC9B,EAAG,kFACH,KAAM,OACN,OAAQD,EACR,cAAe,QACf,eAAgB,QAChB,YAAa,IACjB,CAAG,EAAGC,EAAM,cAAc,OAAQ,CAC9B,GAAI,QACJ,GAAI,MACJ,GAAI,OACJ,GAAI,QACJ,KAAM,OACN,OAAQD,EACR,cAAe,QACf,eAAgB,QAChB,YAAa,IACjB,CAAG,EAAGC,EAAM,cAAc,OAAQ,CAC9B,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,MACJ,KAAM,OACN,OAAQD,EACR,cAAe,QACf,eAAgB,QAChB,YAAa,IACd,CAAA,CAAC,CACJ,CAAC,EAED,IAAIE,EAAa,SAAoBC,EAAQH,EAAO,CAClD,OAAOI,EAAoBD,EAAQH,EAAOD,CAAa,CACzD,EAEIM,EAAwBC,EAAU,WAAC,SAAUC,EAAOC,EAAK,CAC3D,OAAOP,EAAM,cAAcQ,EAAU,OAAO,OAAO,CACjD,IAAKD,CACN,EAAED,EAAO,CACR,WAAYL,CACb,CAAA,CAAC,CACJ,CAAC,EACDG,EAAS,YAAc,WAEvB,MAAAK,EAAeL,EC9Mf,SAASM,EAAcJ,EAA2B,CAChD,OACGK,EAAA,IAAA,MAAA,CAAI,UAAU,sGACZ,WAAM,QACT,CAAA,CAEJ,CAEAD,EAAc,YAAc,iBAM5B,SAASE,EAAcN,EAA2B,CAChD,OACGK,EAAA,IAAAE,EAAA,CAAK,UAAU,wBACb,WAAM,QACT,CAAA,CAEJ,CAEAD,EAAc,YAAc,iBAI5B,SAASE,EAAeR,EAA4B,CAEhD,OAAAK,EAAA,IAAC,QAAA,CACC,UAAU,qFACT,GAAGL,CAAA,CAAA,CAGV,CAEAQ,EAAe,YAAc,kBAEtB,MAAMC,EAAY,CACvB,KAAML,EACN,MAAOI,EACP,KAAMF,CACR;;;;","x_google_ignoreList":[0]}